tools:
  - name: test_custom_ext
    description: "Utility: Test the custom extension. This is a helper tool for testing the custom extension."
    inputSchema:
      type: object
      properties:
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: []
  - name: hot_reload_flutter
    description: Hot reloads the Flutter app.
    inputSchema:
      type: object
      properties:
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
        force:
          type: boolean
          description: "If true, forces a hot reload even if there are no changes to the source code"
      required: []
  - name: get_active_ports
    description: "Utility: Get list of ports where Flutter/Dart processes are listening. This is a local utility, not a Flutter RPC method."
    inputSchema:
      type: object
      properties: {}
      required: []
  # - name: get_supported_protocols
  #   description: "Utility: Get supported protocols from a Flutter app. This is a VM service method, not a Flutter RPC. Connects to the default Flutter debug port (8181) unless specified otherwise."
  #   inputSchema:
  #     type: object
  #     properties:
  #       port:
  #         type: number
  #         description: "Optional: Custom port number if not using default Flutter debug port 8181"
  #     required: []
  - name: get_vm
    description: "Utility: Get VM information from a Flutter app. This is a VM service method, not a Flutter RPC. Connects to the default Flutter debug port (8181) unless specified otherwise."
    inputSchema:
      type: object
      properties:
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: []
  - name: get_extension_rpcs
    description: "Utility: List all available extension RPCs in the Flutter app. This is a helper tool for discovering available methods."
    inputSchema:
      type: object
      properties:
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
        isolateId:
          type: string
          description: "Optional specific isolate ID to check. If not provided, checks all isolates"
        isRawResponse:
          type: boolean
          description: "If true, returns the raw response from the VM service without processing"
          default: false
      required: []
  - name: tap_by_text
    description: "Taps a widget containing the specified text in the Flutter app."
    inputSchema:
      type: object
      properties:
        text:
          type: string
          description: "The text to search for in the widget tree"
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: ["text"]
  - name: enter_text_by_hint
    description: "Enters text into a text field identified by its hint text in the Flutter app."
    inputSchema:
      type: object
      properties:
        hint:
          type: string
          description: "The hint text to identify the text field"
        text:
          type: string
          description: "The text to enter into the field"
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: ["hint", "text"]
  - name: tap_by_semantic_label
    description: "Taps a widget containing the specified semantic label in the Flutter app."
    inputSchema:
      type: object
      properties:
        label:
          type: string
          description: "The semantic label to search for in the widget tree"
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: ["label"]
  - name: tap_by_coordinate
    description: "Taps a widget at the specified coordinates in the Flutter app."
    inputSchema:
      type: object
      properties:
        x:
          type: number
          description: "The x coordinate to tap"
        y:
          type: number
          description: "The y coordinate to tap"
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: ["x", "y"]
  - name: view_widget_tree
    description: "Get the complete widget tree structure of the Flutter app with detailed information about each widget including properties, bounds, and hierarchy."
    inputSchema:
      type: object
      properties:
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
        includeRenderParams:
          type: boolean
          description: "Optional: If true, includes render parameters like bounding rectangle in the widget tree output"
          default: false
      required: []
  - name: scroll_by_offset
    description: "Scrolls a scrollable widget by the specified offset. Can filter by key, semantic label, or text content."
    inputSchema:
      type: object
      properties:
        dx:
          type: number
          description: "The horizontal offset to scroll by"
          default: 0
        dy:
          type: number
          description: "The vertical offset to scroll by"
          default: 0
        key:
          type: string
          description: "Optional: Filter by widget key"
        semanticLabel:
          type: string
          description: "Optional: Filter by semantic label"
        text:
          type: string
          description: "Optional: Filter by text content within the scrollable widget"
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: []
  - name: get_navigation_stack
    description: "Get the current navigation stack (Navigator 2.0 and 1.0 supported)."
    inputSchema:
      type: object
      properties:
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: []
  - name: get_navigation_tree
    description: "Get the current navigation tree."
    inputSchema:
      type: object
      properties:
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: []
  - name: get_widget_properties
    description: "Returns widget properties for a widget with the specified key."
    inputSchema:
      type: object
      properties:
        key:
          type: string
          description: "The key of the widget to inspect."
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: ["key"]
  - name: long_press
    description: "Performs a long press on a widget identified by text, key, or semantic label."
    inputSchema:
      type: object
      properties:
        query:
          type: string
          description: "The query to identify the widget (text, key, or semantic label)."
        duration:
          type: number
          description: "Optional: Duration of the long press in milliseconds (default: 500)."
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: ["query"]
  - name: pop_screen
    description: "Pops the current screen using the active navigation system (Navigator, GoRouter, AutoRouter)."
    inputSchema:
      type: object
      properties:
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: []
  - name: navigate_to_route
    description: "Navigates to a route by string, supporting GoRouter, AutoRoute, and Navigator."
    inputSchema:
      type: object
      properties:
        route:
          type: string
          description: "The route string to navigate to."
        port:
          type: number
          description: "Optional: Custom port number if not using default Flutter debug port 8181"
      required: ["route"]